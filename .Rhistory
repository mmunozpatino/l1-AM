setwd("../src/") # configurar el directorio de trabajo en src
source("read-matrix.R")
m.train <- read_matrix(filename="../data/MATRIX.TRAIN",ocurrence=FALSE,sparse=FALSE)
# Acceso a componetes: m.train$tokens y m.train$matrix
tokens <- m.train$tokens
trainset <- m.train$matrix
names(trainset) <- c(m.train$tokens,"category")
# quizas sea necesario instalar el paquete
# install.packages("ggplot2")
spam <- 0
nospam <- 0
spam <- length(which(m.train$matrix$category=="SPAM"))
nospam <- length(which(m.train$matrix$category=="NO-SPAM"))
distspam<-(spam/nrow(m.train$matrix))*100
distnospam <- (nospam/nrow(m.train$matrix))*100
distribucion = c(distspam, distnospam)
categorias <- c("spam", "no-spam")
distdata = data.frame(distribucion, categorias)
ggplot(data= distdata, aes(x=distdata$categorias, y=distdata$distribucion, fill="red")) +
geom_bar(stat="identity")  +
ggtitle("Distribuci?n de clases") +
labs(x="Categorias", y ="Distribuci?n(%)")
library("ggplot2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
# quizas sea necesario instalar el paquete
# install.packages("ggplot2")
spam <- 0
nospam <- 0
spam <- length(which(m.train$matrix$category=="SPAM"))
nospam <- length(which(m.train$matrix$category=="NO-SPAM"))
distspam<-(spam/nrow(m.train$matrix))*100
distnospam <- (nospam/nrow(m.train$matrix))*100
distribucion = c(distspam, distnospam)
categorias <- c("spam", "no-spam")
distdata = data.frame(distribucion, categorias)
ggplot(data= distdata, aes(x=distdata$categorias, y=distdata$distribucion, fill="red")) +
geom_bar(stat="identity")  +
ggtitle("Distribuci?n de clases") +
labs(x="Categorias", y ="Distribuci?n(%)")
# en este caso estamos usando las propiedades visuales x y fill (relleno)
# quizas sea necesario instalar el paquete
# install.packages("ggplot2")
spam <- 0
nospam <- 0
spam <- length(which(m.train$matrix$category=="SPAM"))
nospam <- length(which(m.train$matrix$category=="NO-SPAM"))
spam<-(spam/nrow(m.train$matrix))*100
nospam <- (nospam/nrow(m.train$matrix))*100
ggplot(data= distdata, aes(x= c("spam", "no-spam"), y= c(spam, nospam) ,fill="red")) +
geom_bar(stat="identity")  +
ggtitle("Distribuci?n de clases") +
labs(x="Categorias", y ="Distribuci?n(%)")
# en este caso estamos usando las propiedades visuales x y fill (relleno)
# quizas sea necesario instalar el paquete
# install.packages("ggplot2")
spam <- 0
nospam <- 0
spam <- length(which(m.train$matrix$category=="SPAM"))
nospam <- length(which(m.train$matrix$category=="NO-SPAM"))
spam<-(spam/nrow(m.train$matrix))*100
nospam <- (nospam/nrow(m.train$matrix))*100
ggplot(data= distdata, aes(x= c("spam", "no-spam"), y= c(spam, nospam) ,fill="red")) +
ggtitle("Distribuci?n de clases") +
labs(x="Categorias", y ="Distribuci?n(%)")
# en este caso estamos usando las propiedades visuales x y fill (relleno)
# quizas sea necesario instalar el paquete
# install.packages("ggplot2")
spam <- 0
nospam <- 0
spam <- length(which(m.train$matrix$category=="SPAM"))
nospam <- length(which(m.train$matrix$category=="NO-SPAM"))
spam<-(spam/nrow(m.train$matrix))*100
nospam <- (nospam/nrow(m.train$matrix))*100
ggplot(data= distdata, aes(x= c("spam", "no-spam"), y= c(spam, nospam) ,fill="red")) +
geom_bar(stat="identity")  +
ggtitle("Distribuci?n de clases") +
labs(x="Categorias", y ="Distribuci?n(%)")
# en este caso estamos usando las propiedades visuales x y fill (relleno)
# quizas sea necesario instalar el paquete
# install.packages("ggplot2")
spam <- 0
nospam <- 0
spam <- length(which(m.train$matrix$category=="SPAM"))
nospam <- length(which(m.train$matrix$category=="NO-SPAM"))
spam<-(spam/nrow(m.train$matrix))*100
nospam <- (nospam/nrow(m.train$matrix))*100
ggplot(data= distdata, aes(x= c("spam", "no-spam"), y= c(spam, nospam) ,fill="red")) +
geom_bar(stat="identity")
# en este caso estamos usando las propiedades visuales x y fill (relleno)
#INSERTAR CODIGO AQUI
names(m.train$matrix)<- names(trainset)
spam<- subset(m.train$matrix, category == "SPAM")
noSpam<- subset(m.train$matrix, category == "NO-SPAM")
matrixSpam <- colSums(spam[1:(ncol(trainset)-1)] )
matrixNoSpam <- colSums(noSpam[1:(ncol(trainset)-1)] )
matrixSumaTotal <- colSums(m.train$matrix[1:(ncol(trainset)-1)] )
matrix <- data.frame(spam = matrixSpam, noSpam = matrixNoSpam, suma = matrixSumaTotal)
matrix <- matrix[order(matrix$suma,decreasing = TRUE),]
graphSet <- matrix[1:10,]
names <- row.names(graphSet)
# View(names)
ggplot(data= graphSet) +
geom_bar(aes(x = names, y= graphSet$noSpam), stat="identity", fill="#00AA33")+
geom_bar(aes(x = names, y= -(graphSet$spam)), stat="identity", fill="#AA0033")+
ggtitle('Mails')+
labs(x="Frases", y = "Cantidad")
View(matrix)
View(graphSet)
View(noSpam)
#INSERTAR CODIGO AQUI
names(m.train$matrix)<- names(trainset)
spam<- subset(m.train$matrix, category == "SPAM")
noSpam<- subset(m.train$matrix, category == "NO-SPAM")
matrixSpam <- colSums(spam[1:(ncol(trainset)-1)] )
matrixNoSpam <- colSums(noSpam[1:(ncol(trainset)-1)] )
matrixSumaTotal <- colSums(m.train$matrix[1:(ncol(trainset)-1)] )
matrix <- data.frame(spam = matrixSpam, noSpam = matrixNoSpam, suma = matrixSumaTotal)
matrix <- matrix[order(matrix$suma,decreasing = TRUE),]
graphSet <- matrix[1:10,]
names <- row.names(graphSet)
# View(names)
ggplot(data= graphSet) +
geom_bar(aes(x = names, y= graphSet$noSpam), stat="identity", fill="#00AA33")+
geom_bar(aes(x = names, y= -(graphSet$spam)), stat="identity", fill="#AA0033", position = 'stack')+
ggtitle('Mails')+
labs(x="Frases", y = "Cantidad")
#INSERTAR CODIGO AQUI
names(m.train$matrix)<- names(trainset)
spam<- subset(m.train$matrix, category == "SPAM")
noSpam<- subset(m.train$matrix, category == "NO-SPAM")
matrixSpam <- colSums(spam[1:(ncol(trainset)-1)] )
matrixNoSpam <- colSums(noSpam[1:(ncol(trainset)-1)] )
matrixSumaTotal <- colSums(m.train$matrix[1:(ncol(trainset)-1)] )
matrix <- data.frame(spam = matrixSpam, noSpam = matrixNoSpam, suma = matrixSumaTotal)
matrix <- matrix[order(matrix$suma,decreasing = TRUE),]
graphSet <- matrix[1:10,]
names <- row.names(graphSet)
# View(names)
ggplot(data= graphSet) +
geom_bar(aes(x = names, y= graphSet$noSpam), stat="identity", fill="#00AA33")+
geom_bar(aes(x = names, y= (graphSet$spam)), stat="identity", fill="#AA0033", position = 'stack')+
ggtitle('Mails')+
labs(x="Frases", y = "Cantidad")
#INSERTAR CODIGO AQUI
names(m.train$matrix)<- names(trainset)
spam<- subset(m.train$matrix, category == "SPAM")
noSpam<- subset(m.train$matrix, category == "NO-SPAM")
matrixSpam <- colSums(spam[1:(ncol(trainset)-1)] )
matrixNoSpam <- colSums(noSpam[1:(ncol(trainset)-1)] )
matrixSumaTotal <- colSums(m.train$matrix[1:(ncol(trainset)-1)] )
matrix <- data.frame(spam = matrixSpam, noSpam = matrixNoSpam, suma = matrixSumaTotal)
matrix <- matrix[order(matrix$suma,decreasing = TRUE),]
graphSet <- matrix[1:10,]
names <- row.names(graphSet)
# View(names)
ggplot(data= graphSet) +
geom_bar(aes(x = names, y= graphSet$noSpam), stat="identity", fill="#00AA33", position = "stack")+
geom_bar(aes(x = names, y= (graphSet$spam)), stat="identity", fill="#AA0033", position = "stack")+
ggtitle('Mails')+
labs(x="Frases", y = "Cantidad")
#INSERTAR CODIGO AQUI
names(m.train$matrix)<- names(trainset)
spam<- subset(m.train$matrix, category == "SPAM")
noSpam<- subset(m.train$matrix, category == "NO-SPAM")
matrixSpam <- colSums(spam[1:(ncol(trainset)-1)] )
matrixNoSpam <- colSums(noSpam[1:(ncol(trainset)-1)] )
matrixSumaTotal <- colSums(m.train$matrix[1:(ncol(trainset)-1)] )
matrix <- data.frame(spam = matrixSpam, noSpam = matrixNoSpam, suma = matrixSumaTotal)
matrix <- matrix[order(matrix$suma,decreasing = TRUE),]
graphSet <- matrix[1:10,]
names <- row.names(graphSet)
# View(names)
ggplot(data= graphSet) +
geom_bar(aes(x = names, y= graphSet$noSpam), stat="identity", fill="#00AA33", position = "dodge")+
geom_bar(aes(x = names, y= (graphSet$spam)), stat="identity", fill="#AA0033", position = "dodge")+
ggtitle('Mails')+
labs(x="Frases", y = "Cantidad")
#INSERTAR CODIGO AQUI
names(m.train$matrix)<- names(trainset)
spam<- subset(m.train$matrix, category == "SPAM")
noSpam<- subset(m.train$matrix, category == "NO-SPAM")
matrixSpam <- colSums(spam[1:(ncol(trainset)-1)] )
matrixNoSpam <- colSums(noSpam[1:(ncol(trainset)-1)] )
matrixSumaTotal <- colSums(m.train$matrix[1:(ncol(trainset)-1)] )
matrix <- data.frame(spam = matrixSpam, noSpam = matrixNoSpam, suma = matrixSumaTotal)
matrix <- matrix[order(matrix$suma,decreasing = TRUE),]
graphSet <- matrix[1:10,]
names <- row.names(graphSet)
# View(names)
ggplot(data= graphSet) +
geom_bar(aes(x = names, y= graphSet$noSpam), stat="identity", fill="#00AA33", position = "dodge")+
geom_bar(aes(x = names, y= (graphSet$spam)), stat="identity", fill="#AA0033", position = "dodge")+
ggtitle('Mails')+
labs(x="Frases", y = "Cantidad")
#INSERTAR CODIGO AQUI
names(m.train$matrix)<- names(trainset)
spam<- subset(m.train$matrix, category == "SPAM")
noSpam<- subset(m.train$matrix, category == "NO-SPAM")
matrixSpam <- colSums(spam[1:(ncol(trainset)-1)] )
matrixNoSpam <- colSums(noSpam[1:(ncol(trainset)-1)] )
matrixSumaTotal <- colSums(m.train$matrix[1:(ncol(trainset)-1)] )
matrix <- data.frame(spam = matrixSpam, noSpam = matrixNoSpam, suma = matrixSumaTotal)
matrix <- matrix[order(matrix$suma,decreasing = TRUE),]
graphSet <- matrix[1:10,]
names <- row.names(graphSet)
# View(names)
ggplot(data= graphSet) +
geom_bar(aes(x = names, y= graphSet$noSpam), stat="identity", fill="#00AA33")+
geom_bar(aes(x = names, y= -(graphSet$spam)), stat="identity", fill="#AA0033")+
ggtitle('Mails')+
labs(x="Frases", y = "Cantidad")
# instalar las librerias rpart,rpart.plot
library("rpart")
library("rpart.plot")
tree.model <- rpart(formula=category~.,data=trainset)
# prp(tree.model)
colCategory <- ncol(trainset)
m.pred <- predict(tree.model, trainset[-colCategory])
aux.pred <- as.matrix(m.pred[,1])
aux.pred[aux.pred>=0.5] <- "SPAM"
aux.pred[aux.pred<0.5] <- "NO-SPAM"
aux.true <- trainset[colCategory]
result <- cbind(aux.true,aux.pred,aux.true==aux.pred)
names(result) <- c("TRUE-VALUE", "PREDICTION", "CORRECT?")
print(result)
index.cut <- (1:length(tokens))[tokens=="spam"|tokens=="httpaddr"|tokens=="news"] #devuelve los index de las palabras buscadas
trainset.cut <- trainset[-index.cut] ##deja el trainset sin las palabras buscadas en la linea anterior
tree.model.cut <- rpart(formula=category~.,data=trainset.cut)
prp(tree.model.cut)
# print(trainset.cut)
m.test <- read_matrix(filename="../data/MATRIX.TEST",ocurrence=FALSE,sparse=FALSE)
testset <- m.test$matrix
names(testset) <- c(m.test$tokens,"category")
#Insertar codigo aqui
